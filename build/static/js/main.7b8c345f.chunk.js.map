{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["User","props","match","params","username","Home","About","Topics","useRouteMatch","console","log","to","url","path","Topic","useParams","topicId","Other2","Action","actionId","App","className","style","backgroundColor","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","bsScrollHeight","aria-current","role","aria-labelledby","placeholder","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b8c345f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\nimport bootstrap from 'bootstrap'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n// import bootstrap from 'bootstrap' will load all of Bootstrap’s plugins onto a bootstrap object. \n// The bootstrap module itself exports all of our plugins. \n// You can manually load Bootstrap’s plugins individually by loading the /js/dist/*.js files under the package’s top-level directory.\n\nfunction App() {\n  return (\n    <Router>\n    {/*    \n    <nav className=\"navbar navbar-expand-lg navbar-light sticky-top\" style={{backgroundColor: \"#e3f2fd\"}}>\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">Link</a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                Dropdown\n              </a>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\n                <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\n                <li><hr className=\"dropdown-divider\"></hr></li>\n                <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\n              </ul>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\">Disabled</a>\n            </li>\n          </ul>\n          <form className=\"d-flex\">\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n          </form>\n        </div>\n      </div>\n    </nav>\n    */}\n\n    <nav className=\"navbar navbar-expand-lg navbar-light sticky-top\" style={{backgroundColor: \"#e3f2fd\"}}>\n    {/*<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">*/}\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">Navbar scroll</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\n          <ul className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\" style={{bsScrollHeight: \"100px\"}}>                            \n            <li className=\"nav-item\">\n              <Link to=\"/home\" className=\"nav-link active\" aria-current=\"page\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/topics\" className=\"nav-link\">Topics</Link>\n            </li>\n            <li>\n              <Link to=\"/about\" className=\"nav-link\">About</Link>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <Link to=\"\" className=\"nav-link dropdown-toggle\" id=\"navbarScrollingDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Other Link</Link>\n              {/*<Link to=\"/other\" className=\"nav-link\">Other</Link>*/}\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarScrollingDropdown\">      \n                <li>\n                  <Link to=\"/other/action1\" className=\"dropdown-item\">Action 1</Link>\n                </li>\n                <li>\n                  <Link to=\"/other/action2\" className=\"dropdown-item\">Action 2</Link>\n                </li>\n                <li><hr className=\"dropdown-divider\"></hr></li>\n                <li>\n                  <Link to=\"/other/somethingelse\" className=\"dropdown-item\">Something else here</Link>\n                </li>        \n              </ul>              \n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\">Link</a>\n            </li>\n          </ul>\n          <form className=\"d-flex\">\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n          </form>\n        </div>\n      </div>\n    </nav>    \n\n    <Switch>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/topics\">\n        <Topics />\n      </Route>\n      <Route path=\"/other/:actionId\">\n        <Action />\n      </Route>      \n      <Route path=\"/other\">\n        <Other2 />\n      </Route>\n\n      <Route path=\"/user/:username\" component={User} />\n      \n      <Route path=\"/\">\n        <Home />\n      </Route>\n    </Switch>\n\n    {/*\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  */}\n    </Router>\n  );\n}\n\nfunction User(props) {\n  return <h1>Hello {props.match.params.username}!</h1>;\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Topics() {\n  let match = useRouteMatch();\n  console.log(\"match :\", match)\n\n  return (\n    <div>\n      <h2>Topics</h2>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>\n            Props v. State\n          </Link>\n        </li>\n      </ul>\n\n      {/* The Topics page has its own <Switch> with more routes\n          that build on the /topics URL path. You can think of the\n          2nd <Route> here as an \"index\" page for all topics, or\n          the page that is shown when no topic is selected */}\n      <Switch>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={match.path}>\n          <h3>Please select a topic.</h3>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Topic() {\n  let params = useParams();\n  let { topicId } = useParams();\n  console.log(\"params :\", params)\n  return <h3>Requested topic ID: {topicId}</h3>;\n}\n\nfunction Other2() {\n  //return <h2>Children of other</h2>\n\n  let match = useRouteMatch();\n  console.log(\"match :\", match)\n\n  return (\n    <div>\n    {/*\n      <ul className=\"dropdown-menu\" aria-labelledby=\"navbarScrollingDropdown\">      \n        <li>\n          <Link to={`${match.url}/action1`} className=\"dropdown-item\">Action 1</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/action2`} className=\"dropdown-item\">Action 2</Link>\n        </li>\n        <li><hr className=\"dropdown-divider\"></hr></li>\n        <li>\n          <Link to={`${match.url}/somethingelse`} className=\"dropdown-item\">Something else here</Link>\n        </li>        \n      </ul>\n    */}\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/action1`}>Act 1</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/action2`}>Act 2</Link>\n        </li>\n      </ul>\n\n      <Switch>\n        <Route path={`${match.path}/:actionid`}>\n          <Action />\n        </Route>\n        <Route path={match.path}>\n          <h3>Please select an action.</h3>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <div>\n      <h3>ID: {id}</h3>\n    </div>\n  );\n}\nfunction Action() {\n  let params = useParams();\n  let { actionId } = useParams();\n  console.log(\"params :\", params)\n  return <h3>Action ID: {actionId}</h3>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import AppRouter from './AppRouter';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}